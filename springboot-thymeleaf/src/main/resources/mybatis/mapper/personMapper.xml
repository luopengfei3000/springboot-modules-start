<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- mapper接口代理实现编写规则：
    1.映射文件中namespace要等于接口的全路径
    2.映射文件中sql语句的id要等于接口的方法名
    3.映射文件中传入参数类型要等于接口方法的入参
    4.映射文件返回值类型要等于接方法的返回值类型
     -->
<mapper namespace="com.example.springbootthymeleaf.mapper.PersonMapper">

    <resultMap id="BaseResultMap" type="com.example.springbootthymeleaf.dto.Person">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,age,name
    </sql>

    <select id="findPersonById" parameterType="integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM person
        WHERE id = #{id}
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM person
    </select>

    <select id="addPerson" parameterType="com.example.springbootthymeleaf.dto.Person">
        INSERT INTO
        person(id,age,name)
        VALUES(#{id},#{age},#{name})
    </select>

    <update id="updatePerson" parameterType="com.example.springbootthymeleaf.dto.Person">
        UPDATE
        person
        SET
        age = #{person.age},name = #{person.name}
        WHERE
        id = #{id}
    </update>

    <delete id="deletePerson" parameterType="integer">
        DELETE
        FROM
        person
        WHERE
        id = #{id}
    </delete>
</mapper>